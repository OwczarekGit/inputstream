use super::{Group1Event, Group2Event, Group3Event, KeyboardEventGroup};

#[derive(Debug, Clone, Copy)]
pub enum Key {
    // G1
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    Backslash,
    LeftBrace,
    RightBrace,
    Print,
    ScrollLock,
    Pause,

    // G2
    Num0,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    Minus,
    Equal,
    Backspace,
    Tilde,
    Enter,
    Tab,
    Esc,
    CapsLock,
    LeftShift,
    LeftCtrl,
    LeftAlt,
    LeftMeta,
    Space,
    RightAlt,
    ContextMenu,
    RightCtrl,
    RightShift,
    Comma,
    Dot,
    Slash,
    Semicolon,
    Quote,

    // G3
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    Left,
    Right,
    Up,
    Down,
    Insert,
    Delete,
    Home,
    End,
    PageUp,
    PageDown,
    Numpad0,
    Numpad1,
    Numpad2,
    Numpad3,
    Numpad4,
    Numpad5,
    Numpad6,
    Numpad7,
    Numpad8,
    Numpad9,
}

impl From<Key> for KeyboardEventGroup {
    fn from(value: Key) -> Self {
        match value {
            Key::A => KeyboardEventGroup::G1(Group1Event::A),
            Key::B => KeyboardEventGroup::G1(Group1Event::B),
            Key::C => KeyboardEventGroup::G1(Group1Event::C),
            Key::D => KeyboardEventGroup::G1(Group1Event::D),
            Key::E => KeyboardEventGroup::G1(Group1Event::E),
            Key::F => KeyboardEventGroup::G1(Group1Event::F),
            Key::G => KeyboardEventGroup::G1(Group1Event::G),
            Key::H => KeyboardEventGroup::G1(Group1Event::H),
            Key::I => KeyboardEventGroup::G1(Group1Event::I),
            Key::J => KeyboardEventGroup::G1(Group1Event::J),
            Key::K => KeyboardEventGroup::G1(Group1Event::K),
            Key::L => KeyboardEventGroup::G1(Group1Event::L),
            Key::M => KeyboardEventGroup::G1(Group1Event::M),
            Key::N => KeyboardEventGroup::G1(Group1Event::N),
            Key::O => KeyboardEventGroup::G1(Group1Event::O),
            Key::P => KeyboardEventGroup::G1(Group1Event::P),
            Key::Q => KeyboardEventGroup::G1(Group1Event::Q),
            Key::R => KeyboardEventGroup::G1(Group1Event::R),
            Key::S => KeyboardEventGroup::G1(Group1Event::S),
            Key::T => KeyboardEventGroup::G1(Group1Event::T),
            Key::U => KeyboardEventGroup::G1(Group1Event::U),
            Key::V => KeyboardEventGroup::G1(Group1Event::V),
            Key::W => KeyboardEventGroup::G1(Group1Event::W),
            Key::X => KeyboardEventGroup::G1(Group1Event::X),
            Key::Y => KeyboardEventGroup::G1(Group1Event::Y),
            Key::Z => KeyboardEventGroup::G1(Group1Event::Z),
            Key::Backslash => KeyboardEventGroup::G1(Group1Event::Backslash),
            Key::LeftBrace => KeyboardEventGroup::G1(Group1Event::LeftBrace),
            Key::RightBrace => KeyboardEventGroup::G1(Group1Event::RightBrace),
            Key::Print => KeyboardEventGroup::G1(Group1Event::Print),
            Key::ScrollLock => KeyboardEventGroup::G1(Group1Event::ScrollLock),
            Key::Pause => KeyboardEventGroup::G1(Group1Event::Pause),

            Key::Num0 => KeyboardEventGroup::G2(Group2Event::Num0),
            Key::Num1 => KeyboardEventGroup::G2(Group2Event::Num1),
            Key::Num2 => KeyboardEventGroup::G2(Group2Event::Num2),
            Key::Num3 => KeyboardEventGroup::G2(Group2Event::Num3),
            Key::Num4 => KeyboardEventGroup::G2(Group2Event::Num4),
            Key::Num5 => KeyboardEventGroup::G2(Group2Event::Num5),
            Key::Num6 => KeyboardEventGroup::G2(Group2Event::Num6),
            Key::Num7 => KeyboardEventGroup::G2(Group2Event::Num7),
            Key::Num8 => KeyboardEventGroup::G2(Group2Event::Num8),
            Key::Num9 => KeyboardEventGroup::G2(Group2Event::Num9),
            Key::Minus => KeyboardEventGroup::G2(Group2Event::Minus),
            Key::Equal => KeyboardEventGroup::G2(Group2Event::Equal),
            Key::Backspace => KeyboardEventGroup::G2(Group2Event::Backspace),
            Key::Tilde => KeyboardEventGroup::G2(Group2Event::Tilde),
            Key::Enter => KeyboardEventGroup::G2(Group2Event::Enter),
            Key::Tab => KeyboardEventGroup::G2(Group2Event::Tab),
            Key::Esc => KeyboardEventGroup::G2(Group2Event::Esc),
            Key::CapsLock => KeyboardEventGroup::G2(Group2Event::CapsLock),
            Key::LeftShift => KeyboardEventGroup::G2(Group2Event::LeftShift),
            Key::LeftCtrl => KeyboardEventGroup::G2(Group2Event::LeftCtrl),
            Key::LeftAlt => KeyboardEventGroup::G2(Group2Event::LeftAlt),
            Key::LeftMeta => KeyboardEventGroup::G2(Group2Event::LeftMeta),
            Key::Space => KeyboardEventGroup::G2(Group2Event::Space),
            Key::RightAlt => KeyboardEventGroup::G2(Group2Event::RightAlt),
            Key::ContextMenu => KeyboardEventGroup::G2(Group2Event::ContextMenu),
            Key::RightCtrl => KeyboardEventGroup::G2(Group2Event::RightCtrl),
            Key::RightShift => KeyboardEventGroup::G2(Group2Event::RightShift),
            Key::Comma => KeyboardEventGroup::G2(Group2Event::Comma),
            Key::Dot => KeyboardEventGroup::G2(Group2Event::Dot),
            Key::Slash => KeyboardEventGroup::G2(Group2Event::Slash),
            Key::Semicolon => KeyboardEventGroup::G2(Group2Event::Semicolon),
            Key::Quote => KeyboardEventGroup::G2(Group2Event::Quote),

            Key::F1 => KeyboardEventGroup::G3(Group3Event::F1),
            Key::F2 => KeyboardEventGroup::G3(Group3Event::F2),
            Key::F3 => KeyboardEventGroup::G3(Group3Event::F3),
            Key::F4 => KeyboardEventGroup::G3(Group3Event::F4),
            Key::F5 => KeyboardEventGroup::G3(Group3Event::F5),
            Key::F6 => KeyboardEventGroup::G3(Group3Event::F6),
            Key::F7 => KeyboardEventGroup::G3(Group3Event::F7),
            Key::F8 => KeyboardEventGroup::G3(Group3Event::F8),
            Key::F9 => KeyboardEventGroup::G3(Group3Event::F9),
            Key::F10 => KeyboardEventGroup::G3(Group3Event::F10),
            Key::F11 => KeyboardEventGroup::G3(Group3Event::F11),
            Key::F12 => KeyboardEventGroup::G3(Group3Event::F12),
            Key::Left => KeyboardEventGroup::G3(Group3Event::Left),
            Key::Right => KeyboardEventGroup::G3(Group3Event::Right),
            Key::Up => KeyboardEventGroup::G3(Group3Event::Up),
            Key::Down => KeyboardEventGroup::G3(Group3Event::Down),
            Key::Insert => KeyboardEventGroup::G3(Group3Event::Insert),
            Key::Delete => KeyboardEventGroup::G3(Group3Event::Delete),
            Key::Home => KeyboardEventGroup::G3(Group3Event::Home),
            Key::End => KeyboardEventGroup::G3(Group3Event::End),
            Key::PageUp => KeyboardEventGroup::G3(Group3Event::PageUp),
            Key::PageDown => KeyboardEventGroup::G3(Group3Event::PageDown),
            Key::Numpad0 => KeyboardEventGroup::G3(Group3Event::Numpad0),
            Key::Numpad1 => KeyboardEventGroup::G3(Group3Event::Numpad1),
            Key::Numpad2 => KeyboardEventGroup::G3(Group3Event::Numpad2),
            Key::Numpad3 => KeyboardEventGroup::G3(Group3Event::Numpad3),
            Key::Numpad4 => KeyboardEventGroup::G3(Group3Event::Numpad4),
            Key::Numpad5 => KeyboardEventGroup::G3(Group3Event::Numpad5),
            Key::Numpad6 => KeyboardEventGroup::G3(Group3Event::Numpad6),
            Key::Numpad7 => KeyboardEventGroup::G3(Group3Event::Numpad7),
            Key::Numpad8 => KeyboardEventGroup::G3(Group3Event::Numpad8),
            Key::Numpad9 => KeyboardEventGroup::G3(Group3Event::Numpad9),
        }
    }
}
